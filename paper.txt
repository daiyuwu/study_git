# flow
	# demo
	# explain
		# remote
		# local
			# log
			# commit
			# branch
			# checkout
			# merge like
				# merge
				# cherry-pick
				# revert
				# rebase
		# reflog

# demo
	drawing_live
	drawing_no_vcs
	drawing

# tool
	git bash (git for windows)
	sourcetree
	git extensions

# remote
	clone

# log
	$ git log
	$ git log --oneline
	$ git log [branchName] --oneline
	
# commit
	$ git commit -m "[messageText]"
	
# branch	
	$ git branch
	$ git branch [branchName]
	$ git branch [branchName] -d
	$ git branch [branchName] -D
	
# checkout
	$ git checkout [branchName]
	$ git checkout [commitId]
	$ git checkout -b [branchName]
	$ git checkout [commitId] -b [branchName]
	$ git checkout --detach [commitId]
	
# merge
	$ git merge [branchName]
	$ git merge [branchName] --no-ff
	$ git merge [branchName] --no-commit
	$ git merge [branchName] --no-ff --no-commit

# cherry-pick
	$ git cherry-pick [commitId]
	$ git cherry-pick [branchName]
	$ git cherry-pick [tagName]
	$ git cherry-pick [branchName] -n [parentNum]
	$ git cherry-pick [--continue/abort/quit/skip]

# revert
	$ git revert [commitId]
	$ git revert [branchName]
	$ git revert [tagname]
	$ git revert [branchName] -n [parentNum]
	$ git revert [--continue/abort/quit/skip]

# rebase
	$ git rebase [commitId]
	$ git rebase [branchName]
	$ git rebase [branchName] -i
		#  p, pick = use commit
		#  r, reword = use commit, but edit the commit message
		#  e, edit = use commit, but stop for amending
		#  s, squash = use commit, but meld into previous commit
		#  f, fixup = like "squash", but discard this commit's log message
		#  x, exec = run command (the rest of the line) using shell

# reflog
	$ git reflog
	$ git reset [extCommitId/refName]
	$ git reset ORIG_HEAD
	
	

