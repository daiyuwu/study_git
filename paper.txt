# flow
	# demo
	# tool
	# explain
		# remote
		# local
			# status
			# commit
			# branch
			# tag
			# checkout
			# merge like
				# merge
				# cherry-pick
				# revert
				# rebase
		# reflog
	# other

# demo
	drawing_live
	drawing_no_vcs
	drawing

# tool
	# CLI
		git bash (git for windows)
	# GUI (base on CLI)
		sourcetree
		git extensions

# remote
	# clone
		$ git clone [repoUrl]

# status
	*$ git status

	$ git add [fileName]
	$ git add [fileName with *]
	*$ git add .
	$ git add -A
	$ git add -u
	
	*$ git log
	*$ git log --oneline
	$ git log [branchName] --oneline

	*$ git reset
	$ git reset [commitId]
	$ git reset [commitId] [--soft/mixed/hard]
	
# commit
	$ git commit
	*$ git commit -m "[messageText]"
	$ git commit -a -m "[messageText]"
	*$ git commit --amend -m "[messageText]"
	
# branch	
	*$ git branch
	$ git branch -a
	*$ git branch [branchName]
	$ git branch [branchName] -d
	$ git branch [branchName] -D
	$ git branch -m [oldBranchName] [newBranchName]
	
# tag
	$ git tag [tagName]
	$ git tag [tagName] -a -m "[messageText]"

# checkout
	$ git checkout [commitId]
	*$ git checkout [branchName]
	*$ git checkout -b [branchName]
	$ git checkout [commitId] -b [branchName]
	*$ git checkout -t [remoteBranchName]
	$ git checkout --detach [branchName]
	
# merge
	*$ git merge [branchName]
	$ git merge [branchName] --no-ff
	$ git merge [branchName] --no-commit
	$ git merge [branchName] --no-ff --no-commit
	$ git merge [branchName] --squash

# cherry-pick
	*$ git cherry-pick [commitId]
	$ git cherry-pick [branchName] -n [parentNum]
	$ git cherry-pick [--continue/abort/quit/skip]

# revert
	*$ git revert [commitId]
	$ git revert [branchName] -n [parentNum]
	$ git revert [--continue/abort/quit/skip]

# rebase
	$ git rebase [commitId]
	*$ git rebase [branchName]
	*$ git rebase [branchName] -i
		#  p, pick = use commit
		#  r, reword = use commit, but edit the commit message
		#  e, edit = use commit, but stop for amending
		#  s, squash = use commit, but meld into previous commit
		#  f, fixup = like "squash", but discard this commit's log message
		#  x, exec = run command (the rest of the line) using shell
	*$ git rebase [--continue/abort/quit/skip]

# reflog
	*$ git reflog
	$ git reset [extCommitId/refName]
	*$ git reset ORIG_HEAD
	
# other
	$ gitk --all &

